// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`unknown plugin > 1. console snapshot > 1. console snapshot 1`] = `


console.log("window", window);
console.log("document", document);
console.log("self", self);
console.log("process.env.TEST", process.env.TEST);
      

      ↓ ↓ ↓ ↓ ↓ ↓

console.log("window", __TEST__.window);
console.log("document", __TEST__["test"].document);
console.log("self", __TEST__.window.self);
console.log("process.env.TEST", __TEST__.process.env.TEST);

`;

exports[`unknown plugin > 2. variable snapshot > 2. variable snapshot 1`] = `


const window = "test";
const document = "test";
const self = "test";
const process = {
  env: {
    TEST: "test",
  },
}
window;
document;
self;
process.env.TEST
      

      ↓ ↓ ↓ ↓ ↓ ↓

const window = "test";
const document = "test";
const self = "test";
const process = {
  env: {
    TEST: "test",
  },
};
window;
document;
self;
process.env.TEST;

`;

exports[`unknown plugin > 3. IIFE snapshot > 3. IIFE snapshot 1`] = `


(function(window, document, self, process) {
  window;
  document;
  self;
  process.env.TEST;
})(window, document, self);
      

      ↓ ↓ ↓ ↓ ↓ ↓

(function (window, document, self, process) {
  window;
  document;
  self;
  process.env.TEST;
})(__TEST__.window, __TEST__["test"].document, __TEST__.window.self);

`;

exports[`unknown plugin > 4. function snapshot > 4. function snapshot 1`] = `


function test(window, document, self, process) {
  window;
  document;
  self;
  process.env.TEST;
}
window;
document;
self;
process.env.TEST;
      

      ↓ ↓ ↓ ↓ ↓ ↓

function test(window, document, self, process) {
  window;
  document;
  self;
  process.env.TEST;
}
__TEST__.window;
__TEST__["test"].document;
__TEST__.window.self;
__TEST__.process.env.TEST;

`;

exports[`unknown plugin > 5. function invocation snapshot > 5. function invocation snapshot 1`] = `


function window() {}
function document() {}
function self() {}
window();
document();
self();
      

      ↓ ↓ ↓ ↓ ↓ ↓

function window() {}
function document() {}
function self() {}
window();
document();
self();

`;

exports[`unknown plugin > 6. allow function invocation snapshot > 6. allow function invocation snapshot 1`] = `


const window = () => {};
const document = () => {};
const self = () => {};
window();
document();
self();
      

      ↓ ↓ ↓ ↓ ↓ ↓

const window = () => {};
const document = () => {};
const self = () => {};
window();
document();
self();

`;

exports[`unknown plugin > 7. event listener snapshot > 7. event listener snapshot 1`] = `


window.addEventListener("xxx", () => {});
document.addEventListener("xxx", () => {});
self.addEventListener("xxx", () => {});
      

      ↓ ↓ ↓ ↓ ↓ ↓

__TEST__.window.addEventListener("xxx", () => {});
__TEST__["test"].document.addEventListener("xxx", () => {});
__TEST__.window.self.addEventListener("xxx", () => {});

`;

exports[`unknown plugin > 8. object literal snapshot > 8. object literal snapshot 1`] = `


const test1 = {
  window: window,
  get window() {
    return window;
  },
  set window(window) {},
  document: document,
  get document() {
    return document;
  },
  set document(document) {},
  self: self,
  get self() {
    return self;
  },
  set self(self) {},
  "process.env.TEST": process.env.TEST,
};
const test2 = {
  window,
  document,
  self,
};
      

      ↓ ↓ ↓ ↓ ↓ ↓

const test1 = {
  window: __TEST__.window,
  get window() {
    return __TEST__.window;
  },
  set window(window) {},
  document: __TEST__["test"].document,
  get document() {
    return __TEST__["test"].document;
  },
  set document(document) {},
  self: __TEST__.window.self,
  get self() {
    return __TEST__.window.self;
  },
  set self(self) {},
  "process.env.TEST": __TEST__.process.env.TEST,
};
const test2 = {
  window: __TEST__.window,
  document: __TEST__["test"].document,
  self: __TEST__.window.self,
};

`;

exports[`unknown plugin > 9. class snapshot > 9. class snapshot 1`] = `


class Test {
  #window
  self
  constructor(window, self, process) {
    this.window = window;
    this.self = self;
    this.test = process.env.TEST;
  }
  document() {
    return document;
  }
  self = () => {
    return this.self;
  }
  get window() {
    return this.#window;
  }
  set window(window) {
    this.#window = window;
  }
}
      

      ↓ ↓ ↓ ↓ ↓ ↓

class Test {
  #window;
  self;
  constructor(window, self, process) {
    this.window = window;
    this.self = self;
    this.test = process.env.TEST;
  }
  document() {
    return __TEST__["test"].document;
  }
  self = () => {
    return this.self;
  };
  get window() {
    return this.#window;
  }
  set window(window) {
    this.#window = window;
  }
}

`;

exports[`unknown plugin > 10. import statement snapshot > 10. import statement snapshot 1`] = `


import window, { document, self, process } from "test";
window;
document;
self;
process.env.TEST
      

      ↓ ↓ ↓ ↓ ↓ ↓

import window, { document, self, process } from "test";
window;
document;
self;
process.env.TEST;

`;

exports[`unknown plugin > 11. export statement snapshot > 11. export statement snapshot 1`] = `


export { window, document, self } from "test";
      

      ↓ ↓ ↓ ↓ ↓ ↓

export { window, document, self } from "test";

`;

exports[`unknown plugin > 12. optional chaining snapshot > 12. optional chaining snapshot 1`] = `


test?.window;
      

      ↓ ↓ ↓ ↓ ↓ ↓

test?.window;

`;
